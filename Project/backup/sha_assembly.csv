push{r4, r7, lr}
,
subsp, #364,
addr7, sp, #0
,
addsr3, r7, #4
,
strr0, [r3, #0]
,
ldr.wr2, [pc, #1112],
addr2, pc
,
ldr.wr3, [pc, #1108],
ldrr3, [r2, r3]
,
ldrr3, [r3, #0]
,
str.wr3, [r7, #356],
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n54 <sha_transform+0x54>
,
addsr3, r7, #4
,
ldrr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
addsr3, #6
,
lslsr3, r3, #2
,
addr3, r1
,
ldrr0, [r3, #4]
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #15
,
ble.n26 <sha_transform+0x26>
,
add.wr3, r7, #8
,
movsr1, #16
,
strr1, [r3, #0]
,
b.nd2 <sha_transform+0xd2>
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
subsr1, r3, #3
,
add.wr3, r7, #36,
ldr.wr1, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #8
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #14
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #16
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eor.wr0, r1, r3
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n68 <sha_transform+0x68>
,
add.wr3, r7, #12
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #4]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #8]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #12]
,
strr1, [r3, #0]
,
add.wr3, r7, #28
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #16]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n1c4 <sha_transform+0x1c4>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
mvnsr4, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #31129,
movtr3, #23170,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #19
,
ble.n122 <sha_transform+0x122>
,
add.wr3, r7, #8
,
movsr1, #20
,
strr1, [r3, #0]
,
b.n270 <sha_transform+0x270>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #60321,
movtr3, #28377,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #39,
ble.n1d8 <sha_transform+0x1d8>
,
add.wr3, r7, #8
,
movsr1, #40,
strr1, [r3, #0]
,
b.n32c <sha_transform+0x32c>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #20
,
add.wr3, r7, #24
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
orrsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr4, r7, #20
,
add.wr3, r7, #24
,
ldrr4, [r4, #0]
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #48348,
movtr3, #36635,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #59,
ble.n284 <sha_transform+0x284>
,
add.wr3, r7, #8
,
movsr1, #60,
strr1, [r3, #0]
,
b.n3d8 <sha_transform+0x3d8>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #49622,
movtr3, #51810,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n340 <sha_transform+0x340>
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #0]
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #0]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #4]
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #4]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #8]
,
add.wr3, r7, #20
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #8]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #12]
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #12]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #16]
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #16]
,
ldrr3, [pc, #28],
ldrr3, [r2, r3]
,
ldr.wr2, [r7, #356],
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n45a <sha_transform+0x45a>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #364,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000452
,
.word0x00000000
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
strr1, [r7, #0]
,
ldrr3, [pc, #124],
addr3, pc
,
ldrr2, [pc, #124],
ldrr2, [r3, r2]
,
ldrr2, [r2, #0]
,
strr2, [r7, #20]
,
ldrr2, [r7, #0]
,
lsrsr2, r2, #2
,
strr2, [r7, #0]
,
ldrr2, [r7, #4]
,
strr2, [r7, #12]
,
movsr2, #0
,
strr2, [r7, #8]
,
b.n4d4 <byte_reverse+0x68>
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #0]
,
strbr2, [r7, #16]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #1]
,
strbr2, [r7, #17]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #2]
,
strbr2, [r7, #18]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #3]
,
strbr2, [r7, #19]
,
ldrbr1, [r7, #19]
,
ldrr2, [r7, #12]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #1
,
ldrbr1, [r7, #18]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #2
,
ldrbr1, [r7, #17]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #3
,
ldrbr1, [r7, #16]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #4
,
strr2, [r7, #12]
,
ldrr2, [r7, #8]
,
addsr2, #1
,
strr2, [r7, #8]
,
ldrr1, [r7, #8]
,
ldrr2, [r7, #0]
,
cmpr1, r2
,
blt.n492 <byte_reverse+0x26>
,
ldrr2, [pc, #24],
ldrr3, [r3, r2]
,
ldrr2, [r7, #20]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n4ee <byte_reverse+0x82>
,
bl0 <__stack_chk_fail>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
.word0x00000078
,
.word0x00000000
,
push{r7}
,
subsp, #12
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr2, [r7, #4]
,
movwr3, #8961,
movtr3, #26437,
strr3, [r2, #0]
,
ldrr2, [r7, #4]
,
movwr3, #43913,
movtr3, #61389,
strr3, [r2, #4]
,
ldrr2, [r7, #4]
,
movwr3, #56574,
movtr3, #39098,
strr3, [r2, #8]
,
ldrr2, [r7, #4]
,
movwr3, #21622,
movtr3, #4146,
strr3, [r2, #12]
,
ldrr2, [r7, #4]
,
movwr3, #57840,
movtr3, #50130,
strr3, [r2, #16]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #20]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #24]
,
addsr7, #12
,
movsp, r7
,
ldr.wr7, [sp], #4
,
bxlr
,
push{r7, lr}
,
subsp, #16
,
addr7, sp, #0
,
strr0, [r7, #12]
,
strr1, [r7, #8]
,
strr2, [r7, #4]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #20]
,
cmpr2, r3
,
bcs.n580 <sha_update+0x28>
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #24]
,
addsr2, r3, #1
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #20]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #24]
,
ldrr3, [r7, #4]
,
lsrsr3, r3, #29
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
b.n5ca <sha_update+0x72>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr2, #64,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #12]
,
bl0 <sha_transform>
,
ldrr3, [r7, #8]
,
addsr3, #64,
strr3, [r7, #8]
,
ldrr3, [r7, #4]
,
subsr3, #64,
strr3, [r7, #4]
,
ldrr3, [r7, #4]
,
cmpr3, #63,
bgt.n59e <sha_update+0x46>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
ldrr2, [r7, #4]
,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
addsr7, #16
,
movsp, r7
,
pop{r7, pc}
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #20]
,
strr3, [r7, #12]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #24]
,
strr3, [r7, #16]
,
ldrr3, [r7, #12]
,
lsrsr3, r3, #3
,
and.wr3, r3, #63,
strr3, [r7, #20]
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr1, r3, #1
,
strr1, [r7, #20]
,
addr3, r2
,
movsr2, #128,
strbr2, [r3, #0]
,
ldrr3, [r7, #20]
,
cmpr3, #56,
ble.n656 <sha_final+0x70>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #64,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr2, #56,
movsr1, #0
,
movr0, r3
,
bl0 <memset>
,
b.n66e <sha_final+0x88>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #56,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr3, [r7, #4]
,
ldrr2, [r7, #16]
,
strr2, [r3, #84],
ldrr3, [r7, #4]
,
ldrr2, [r7, #12]
,
strr2, [r3, #88],
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
push{r4, r7, lr}
,
sub.wsp, sp, #8192,
subsp, #20
,
addr7, sp, #0
,
add.wr3, r7, #16
,
subsr3, #12
,
strr0, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #16
,
strr1, [r3, #0]
,
ldrr4, [pc, #152],
addr4, pc
,
ldrr3, [pc, #152],
ldrr3, [r4, r3]
,
ldrr3, [r3, #0]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
strr3, [r2, #0]
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl4fc <sha_init>
,
b.n6ea <sha_stream+0x56>
,
add.wr2, r7, #16
,
subsr2, #8
,
add.wr1, r7, #16
,
subsr1, #4
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr2, [r2, #0]
,
ldrr0, [r3, #0]
,
bl558 <sha_update>
,
add.wr3, r7, #16
,
subsr3, #16
,
add.wr0, r7, #16
,
subsr0, #4
,
ldrr3, [r3, #0]
,
mov.wr2, #8192,
movsr1, #1
,
bl0 <fread>
,
movr2, r0
,
add.wr3, r7, #16
,
subsr3, #8
,
strr2, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #8
,
ldrr3, [r3, #0]
,
cmpr3, #0
,
bgt.n6d0 <sha_stream+0x3c>
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl5e6 <sha_final>
,
ldrr3, [pc, #36],
ldrr3, [r4, r3]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
ldrr2, [r2, #0]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n73e <sha_stream+0xaa>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #8192,
addsr7, #20
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000094
,
.word0x00000000
,
push{r4, r7, lr}
,
subsp, #20
,
addr7, sp, #8
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr1, [r3, #0]
,
ldrr3, [r7, #4]
,
ldrr0, [r3, #4]
,
ldrr3, [r7, #4]
,
ldrr4, [r3, #8]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #12]
,
ldrr2, [r7, #4]
,
ldrr2, [r2, #16]
,
strr2, [sp, #4]
,
strr3, [sp, #0]
,
movr3, r4
,
movr2, r0
,
ldrr0, [pc, #12],
addr0, pc
,
bl0 <printf>
,
addsr7, #12
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x0000000a
,
push{r4, r7, lr}
,
subsp, #364,
addr7, sp, #0
,
addsr3, r7, #4
,
strr0, [r3, #0]
,
ldr.wr2, [pc, #1112],
addr2, pc
,
ldr.wr3, [pc, #1108],
ldrr3, [r2, r3]
,
ldrr3, [r3, #0]
,
str.wr3, [r7, #356],
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n54 <sha_transform+0x54>
,
addsr3, r7, #4
,
ldrr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
addsr3, #6
,
lslsr3, r3, #2
,
addr3, r1
,
ldrr0, [r3, #4]
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #15
,
ble.n26 <sha_transform+0x26>
,
add.wr3, r7, #8
,
movsr1, #16
,
strr1, [r3, #0]
,
b.nd2 <sha_transform+0xd2>
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
subsr1, r3, #3
,
add.wr3, r7, #36,
ldr.wr1, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #8
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #14
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #16
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eor.wr0, r1, r3
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n68 <sha_transform+0x68>
,
add.wr3, r7, #12
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #4]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #8]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #12]
,
strr1, [r3, #0]
,
add.wr3, r7, #28
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #16]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n1c4 <sha_transform+0x1c4>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
mvnsr4, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #31129,
movtr3, #23170,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #19
,
ble.n122 <sha_transform+0x122>
,
add.wr3, r7, #8
,
movsr1, #20
,
strr1, [r3, #0]
,
b.n270 <sha_transform+0x270>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #60321,
movtr3, #28377,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #39,
ble.n1d8 <sha_transform+0x1d8>
,
add.wr3, r7, #8
,
movsr1, #40,
strr1, [r3, #0]
,
b.n32c <sha_transform+0x32c>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #20
,
add.wr3, r7, #24
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
orrsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr4, r7, #20
,
add.wr3, r7, #24
,
ldrr4, [r4, #0]
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #48348,
movtr3, #36635,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #59,
ble.n284 <sha_transform+0x284>
,
add.wr3, r7, #8
,
movsr1, #60,
strr1, [r3, #0]
,
b.n3d8 <sha_transform+0x3d8>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #49622,
movtr3, #51810,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n340 <sha_transform+0x340>
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #0]
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #0]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #4]
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #4]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #8]
,
add.wr3, r7, #20
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #8]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #12]
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #12]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #16]
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #16]
,
ldrr3, [pc, #28],
ldrr3, [r2, r3]
,
ldr.wr2, [r7, #356],
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n45a <sha_transform+0x45a>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #364,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000452
,
.word0x00000000
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
strr1, [r7, #0]
,
ldrr3, [pc, #124],
addr3, pc
,
ldrr2, [pc, #124],
ldrr2, [r3, r2]
,
ldrr2, [r2, #0]
,
strr2, [r7, #20]
,
ldrr2, [r7, #0]
,
lsrsr2, r2, #2
,
strr2, [r7, #0]
,
ldrr2, [r7, #4]
,
strr2, [r7, #12]
,
movsr2, #0
,
strr2, [r7, #8]
,
b.n4d4 <byte_reverse+0x68>
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #0]
,
strbr2, [r7, #16]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #1]
,
strbr2, [r7, #17]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #2]
,
strbr2, [r7, #18]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #3]
,
strbr2, [r7, #19]
,
ldrbr1, [r7, #19]
,
ldrr2, [r7, #12]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #1
,
ldrbr1, [r7, #18]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #2
,
ldrbr1, [r7, #17]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #3
,
ldrbr1, [r7, #16]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #4
,
strr2, [r7, #12]
,
ldrr2, [r7, #8]
,
addsr2, #1
,
strr2, [r7, #8]
,
ldrr1, [r7, #8]
,
ldrr2, [r7, #0]
,
cmpr1, r2
,
blt.n492 <byte_reverse+0x26>
,
ldrr2, [pc, #24],
ldrr3, [r3, r2]
,
ldrr2, [r7, #20]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n4ee <byte_reverse+0x82>
,
bl0 <__stack_chk_fail>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
.word0x00000078
,
.word0x00000000
,
push{r7}
,
subsp, #12
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr2, [r7, #4]
,
movwr3, #8961,
movtr3, #26437,
strr3, [r2, #0]
,
ldrr2, [r7, #4]
,
movwr3, #43913,
movtr3, #61389,
strr3, [r2, #4]
,
ldrr2, [r7, #4]
,
movwr3, #56574,
movtr3, #39098,
strr3, [r2, #8]
,
ldrr2, [r7, #4]
,
movwr3, #21622,
movtr3, #4146,
strr3, [r2, #12]
,
ldrr2, [r7, #4]
,
movwr3, #57840,
movtr3, #50130,
strr3, [r2, #16]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #20]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #24]
,
addsr7, #12
,
movsp, r7
,
ldr.wr7, [sp], #4
,
bxlr
,
push{r7, lr}
,
subsp, #16
,
addr7, sp, #0
,
strr0, [r7, #12]
,
strr1, [r7, #8]
,
strr2, [r7, #4]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #20]
,
cmpr2, r3
,
bcs.n580 <sha_update+0x28>
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #24]
,
addsr2, r3, #1
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #20]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #24]
,
ldrr3, [r7, #4]
,
lsrsr3, r3, #29
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
b.n5ca <sha_update+0x72>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr2, #64,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #12]
,
bl0 <sha_transform>
,
ldrr3, [r7, #8]
,
addsr3, #64,
strr3, [r7, #8]
,
ldrr3, [r7, #4]
,
subsr3, #64,
strr3, [r7, #4]
,
ldrr3, [r7, #4]
,
cmpr3, #63,
bgt.n59e <sha_update+0x46>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
ldrr2, [r7, #4]
,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
addsr7, #16
,
movsp, r7
,
pop{r7, pc}
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #20]
,
strr3, [r7, #12]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #24]
,
strr3, [r7, #16]
,
ldrr3, [r7, #12]
,
lsrsr3, r3, #3
,
and.wr3, r3, #63,
strr3, [r7, #20]
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr1, r3, #1
,
strr1, [r7, #20]
,
addr3, r2
,
movsr2, #128,
strbr2, [r3, #0]
,
ldrr3, [r7, #20]
,
cmpr3, #56,
ble.n656 <sha_final+0x70>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #64,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr2, #56,
movsr1, #0
,
movr0, r3
,
bl0 <memset>
,
b.n66e <sha_final+0x88>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #56,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr3, [r7, #4]
,
ldrr2, [r7, #16]
,
strr2, [r3, #84],
ldrr3, [r7, #4]
,
ldrr2, [r7, #12]
,
strr2, [r3, #88],
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
push{r4, r7, lr}
,
sub.wsp, sp, #8192,
subsp, #20
,
addr7, sp, #0
,
add.wr3, r7, #16
,
subsr3, #12
,
strr0, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #16
,
strr1, [r3, #0]
,
ldrr4, [pc, #152],
addr4, pc
,
ldrr3, [pc, #152],
ldrr3, [r4, r3]
,
ldrr3, [r3, #0]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
strr3, [r2, #0]
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl4fc <sha_init>
,
b.n6ea <sha_stream+0x56>
,
add.wr2, r7, #16
,
subsr2, #8
,
add.wr1, r7, #16
,
subsr1, #4
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr2, [r2, #0]
,
ldrr0, [r3, #0]
,
bl558 <sha_update>
,
add.wr3, r7, #16
,
subsr3, #16
,
add.wr0, r7, #16
,
subsr0, #4
,
ldrr3, [r3, #0]
,
mov.wr2, #8192,
movsr1, #1
,
bl0 <fread>
,
movr2, r0
,
add.wr3, r7, #16
,
subsr3, #8
,
strr2, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #8
,
ldrr3, [r3, #0]
,
cmpr3, #0
,
bgt.n6d0 <sha_stream+0x3c>
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl5e6 <sha_final>
,
ldrr3, [pc, #36],
ldrr3, [r4, r3]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
ldrr2, [r2, #0]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n73e <sha_stream+0xaa>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #8192,
addsr7, #20
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000094
,
.word0x00000000
,
push{r4, r7, lr}
,
subsp, #20
,
addr7, sp, #8
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr1, [r3, #0]
,
ldrr3, [r7, #4]
,
ldrr0, [r3, #4]
,
ldrr3, [r7, #4]
,
ldrr4, [r3, #8]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #12]
,
ldrr2, [r7, #4]
,
ldrr2, [r2, #16]
,
strr2, [sp, #4]
,
strr3, [sp, #0]
,
movr3, r4
,
movr2, r0
,
ldrr0, [pc, #12],
addr0, pc
,
bl0 <printf>
,
addsr7, #12
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x0000000a
,
push{r4, r7, lr}
,
subsp, #364,
addr7, sp, #0
,
addsr3, r7, #4
,
strr0, [r3, #0]
,
ldr.wr2, [pc, #1112],
addr2, pc
,
ldr.wr3, [pc, #1108],
ldrr3, [r2, r3]
,
ldrr3, [r3, #0]
,
str.wr3, [r7, #356],
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n54 <sha_transform+0x54>
,
addsr3, r7, #4
,
ldrr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
addsr3, #6
,
lslsr3, r3, #2
,
addr3, r1
,
ldrr0, [r3, #4]
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #15
,
ble.n26 <sha_transform+0x26>
,
add.wr3, r7, #8
,
movsr1, #16
,
strr1, [r3, #0]
,
b.nd2 <sha_transform+0xd2>
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
subsr1, r3, #3
,
add.wr3, r7, #36,
ldr.wr1, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #8
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #14
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #16
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eor.wr0, r1, r3
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n68 <sha_transform+0x68>
,
add.wr3, r7, #12
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #4]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #8]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #12]
,
strr1, [r3, #0]
,
add.wr3, r7, #28
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #16]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n1c4 <sha_transform+0x1c4>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
mvnsr4, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #31129,
movtr3, #23170,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #19
,
ble.n122 <sha_transform+0x122>
,
add.wr3, r7, #8
,
movsr1, #20
,
strr1, [r3, #0]
,
b.n270 <sha_transform+0x270>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #60321,
movtr3, #28377,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #39,
ble.n1d8 <sha_transform+0x1d8>
,
add.wr3, r7, #8
,
movsr1, #40,
strr1, [r3, #0]
,
b.n32c <sha_transform+0x32c>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #20
,
add.wr3, r7, #24
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
orrsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr4, r7, #20
,
add.wr3, r7, #24
,
ldrr4, [r4, #0]
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #48348,
movtr3, #36635,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #59,
ble.n284 <sha_transform+0x284>
,
add.wr3, r7, #8
,
movsr1, #60,
strr1, [r3, #0]
,
b.n3d8 <sha_transform+0x3d8>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #49622,
movtr3, #51810,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n340 <sha_transform+0x340>
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #0]
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #0]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #4]
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #4]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #8]
,
add.wr3, r7, #20
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #8]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #12]
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #12]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #16]
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #16]
,
ldrr3, [pc, #28],
ldrr3, [r2, r3]
,
ldr.wr2, [r7, #356],
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n45a <sha_transform+0x45a>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #364,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000452
,
.word0x00000000
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
strr1, [r7, #0]
,
ldrr3, [pc, #124],
addr3, pc
,
ldrr2, [pc, #124],
ldrr2, [r3, r2]
,
ldrr2, [r2, #0]
,
strr2, [r7, #20]
,
ldrr2, [r7, #0]
,
lsrsr2, r2, #2
,
strr2, [r7, #0]
,
ldrr2, [r7, #4]
,
strr2, [r7, #12]
,
movsr2, #0
,
strr2, [r7, #8]
,
b.n4d4 <byte_reverse+0x68>
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #0]
,
strbr2, [r7, #16]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #1]
,
strbr2, [r7, #17]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #2]
,
strbr2, [r7, #18]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #3]
,
strbr2, [r7, #19]
,
ldrbr1, [r7, #19]
,
ldrr2, [r7, #12]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #1
,
ldrbr1, [r7, #18]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #2
,
ldrbr1, [r7, #17]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #3
,
ldrbr1, [r7, #16]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #4
,
strr2, [r7, #12]
,
ldrr2, [r7, #8]
,
addsr2, #1
,
strr2, [r7, #8]
,
ldrr1, [r7, #8]
,
ldrr2, [r7, #0]
,
cmpr1, r2
,
blt.n492 <byte_reverse+0x26>
,
ldrr2, [pc, #24],
ldrr3, [r3, r2]
,
ldrr2, [r7, #20]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n4ee <byte_reverse+0x82>
,
bl0 <__stack_chk_fail>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
.word0x00000078
,
.word0x00000000
,
push{r7}
,
subsp, #12
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr2, [r7, #4]
,
movwr3, #8961,
movtr3, #26437,
strr3, [r2, #0]
,
ldrr2, [r7, #4]
,
movwr3, #43913,
movtr3, #61389,
strr3, [r2, #4]
,
ldrr2, [r7, #4]
,
movwr3, #56574,
movtr3, #39098,
strr3, [r2, #8]
,
ldrr2, [r7, #4]
,
movwr3, #21622,
movtr3, #4146,
strr3, [r2, #12]
,
ldrr2, [r7, #4]
,
movwr3, #57840,
movtr3, #50130,
strr3, [r2, #16]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #20]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #24]
,
addsr7, #12
,
movsp, r7
,
ldr.wr7, [sp], #4
,
bxlr
,
push{r7, lr}
,
subsp, #16
,
addr7, sp, #0
,
strr0, [r7, #12]
,
strr1, [r7, #8]
,
strr2, [r7, #4]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #20]
,
cmpr2, r3
,
bcs.n580 <sha_update+0x28>
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #24]
,
addsr2, r3, #1
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #20]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #24]
,
ldrr3, [r7, #4]
,
lsrsr3, r3, #29
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
b.n5ca <sha_update+0x72>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr2, #64,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #12]
,
bl0 <sha_transform>
,
ldrr3, [r7, #8]
,
addsr3, #64,
strr3, [r7, #8]
,
ldrr3, [r7, #4]
,
subsr3, #64,
strr3, [r7, #4]
,
ldrr3, [r7, #4]
,
cmpr3, #63,
bgt.n59e <sha_update+0x46>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
ldrr2, [r7, #4]
,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
addsr7, #16
,
movsp, r7
,
pop{r7, pc}
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #20]
,
strr3, [r7, #12]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #24]
,
strr3, [r7, #16]
,
ldrr3, [r7, #12]
,
lsrsr3, r3, #3
,
and.wr3, r3, #63,
strr3, [r7, #20]
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr1, r3, #1
,
strr1, [r7, #20]
,
addr3, r2
,
movsr2, #128,
strbr2, [r3, #0]
,
ldrr3, [r7, #20]
,
cmpr3, #56,
ble.n656 <sha_final+0x70>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #64,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr2, #56,
movsr1, #0
,
movr0, r3
,
bl0 <memset>
,
b.n66e <sha_final+0x88>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #56,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr3, [r7, #4]
,
ldrr2, [r7, #16]
,
strr2, [r3, #84],
ldrr3, [r7, #4]
,
ldrr2, [r7, #12]
,
strr2, [r3, #88],
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
push{r4, r7, lr}
,
sub.wsp, sp, #8192,
subsp, #20
,
addr7, sp, #0
,
add.wr3, r7, #16
,
subsr3, #12
,
strr0, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #16
,
strr1, [r3, #0]
,
ldrr4, [pc, #152],
addr4, pc
,
ldrr3, [pc, #152],
ldrr3, [r4, r3]
,
ldrr3, [r3, #0]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
strr3, [r2, #0]
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl4fc <sha_init>
,
b.n6ea <sha_stream+0x56>
,
add.wr2, r7, #16
,
subsr2, #8
,
add.wr1, r7, #16
,
subsr1, #4
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr2, [r2, #0]
,
ldrr0, [r3, #0]
,
bl558 <sha_update>
,
add.wr3, r7, #16
,
subsr3, #16
,
add.wr0, r7, #16
,
subsr0, #4
,
ldrr3, [r3, #0]
,
mov.wr2, #8192,
movsr1, #1
,
bl0 <fread>
,
movr2, r0
,
add.wr3, r7, #16
,
subsr3, #8
,
strr2, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #8
,
ldrr3, [r3, #0]
,
cmpr3, #0
,
bgt.n6d0 <sha_stream+0x3c>
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl5e6 <sha_final>
,
ldrr3, [pc, #36],
ldrr3, [r4, r3]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
ldrr2, [r2, #0]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n73e <sha_stream+0xaa>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #8192,
addsr7, #20
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000094
,
.word0x00000000
,
push{r4, r7, lr}
,
subsp, #20
,
addr7, sp, #8
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr1, [r3, #0]
,
ldrr3, [r7, #4]
,
ldrr0, [r3, #4]
,
ldrr3, [r7, #4]
,
ldrr4, [r3, #8]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #12]
,
ldrr2, [r7, #4]
,
ldrr2, [r2, #16]
,
strr2, [sp, #4]
,
strr3, [sp, #0]
,
movr3, r4
,
movr2, r0
,
ldrr0, [pc, #12],
addr0, pc
,
bl0 <printf>
,
addsr7, #12
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x0000000a
,
push{r4, r7, lr}
,
subsp, #364,
addr7, sp, #0
,
addsr3, r7, #4
,
strr0, [r3, #0]
,
ldr.wr2, [pc, #1112],
addr2, pc
,
ldr.wr3, [pc, #1108],
ldrr3, [r2, r3]
,
ldrr3, [r3, #0]
,
str.wr3, [r7, #356],
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n54 <sha_transform+0x54>
,
addsr3, r7, #4
,
ldrr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
addsr3, #6
,
lslsr3, r3, #2
,
addr3, r1
,
ldrr0, [r3, #4]
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #15
,
ble.n26 <sha_transform+0x26>
,
add.wr3, r7, #8
,
movsr1, #16
,
strr1, [r3, #0]
,
b.nd2 <sha_transform+0xd2>
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
subsr1, r3, #3
,
add.wr3, r7, #36,
ldr.wr1, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #8
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #14
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #16
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eor.wr0, r1, r3
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n68 <sha_transform+0x68>
,
add.wr3, r7, #12
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #4]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #8]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #12]
,
strr1, [r3, #0]
,
add.wr3, r7, #28
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #16]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n1c4 <sha_transform+0x1c4>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
mvnsr4, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #31129,
movtr3, #23170,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #19
,
ble.n122 <sha_transform+0x122>
,
add.wr3, r7, #8
,
movsr1, #20
,
strr1, [r3, #0]
,
b.n270 <sha_transform+0x270>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #60321,
movtr3, #28377,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #39,
ble.n1d8 <sha_transform+0x1d8>
,
add.wr3, r7, #8
,
movsr1, #40,
strr1, [r3, #0]
,
b.n32c <sha_transform+0x32c>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #20
,
add.wr3, r7, #24
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
orrsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr4, r7, #20
,
add.wr3, r7, #24
,
ldrr4, [r4, #0]
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #48348,
movtr3, #36635,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #59,
ble.n284 <sha_transform+0x284>
,
add.wr3, r7, #8
,
movsr1, #60,
strr1, [r3, #0]
,
b.n3d8 <sha_transform+0x3d8>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #49622,
movtr3, #51810,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n340 <sha_transform+0x340>
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #0]
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #0]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #4]
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #4]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #8]
,
add.wr3, r7, #20
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #8]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #12]
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #12]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #16]
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #16]
,
ldrr3, [pc, #28],
ldrr3, [r2, r3]
,
ldr.wr2, [r7, #356],
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n45a <sha_transform+0x45a>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #364,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000452
,
.word0x00000000
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
strr1, [r7, #0]
,
ldrr3, [pc, #124],
addr3, pc
,
ldrr2, [pc, #124],
ldrr2, [r3, r2]
,
ldrr2, [r2, #0]
,
strr2, [r7, #20]
,
ldrr2, [r7, #0]
,
lsrsr2, r2, #2
,
strr2, [r7, #0]
,
ldrr2, [r7, #4]
,
strr2, [r7, #12]
,
movsr2, #0
,
strr2, [r7, #8]
,
b.n4d4 <byte_reverse+0x68>
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #0]
,
strbr2, [r7, #16]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #1]
,
strbr2, [r7, #17]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #2]
,
strbr2, [r7, #18]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #3]
,
strbr2, [r7, #19]
,
ldrbr1, [r7, #19]
,
ldrr2, [r7, #12]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #1
,
ldrbr1, [r7, #18]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #2
,
ldrbr1, [r7, #17]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #3
,
ldrbr1, [r7, #16]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #4
,
strr2, [r7, #12]
,
ldrr2, [r7, #8]
,
addsr2, #1
,
strr2, [r7, #8]
,
ldrr1, [r7, #8]
,
ldrr2, [r7, #0]
,
cmpr1, r2
,
blt.n492 <byte_reverse+0x26>
,
ldrr2, [pc, #24],
ldrr3, [r3, r2]
,
ldrr2, [r7, #20]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n4ee <byte_reverse+0x82>
,
bl0 <__stack_chk_fail>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
.word0x00000078
,
.word0x00000000
,
push{r7}
,
subsp, #12
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr2, [r7, #4]
,
movwr3, #8961,
movtr3, #26437,
strr3, [r2, #0]
,
ldrr2, [r7, #4]
,
movwr3, #43913,
movtr3, #61389,
strr3, [r2, #4]
,
ldrr2, [r7, #4]
,
movwr3, #56574,
movtr3, #39098,
strr3, [r2, #8]
,
ldrr2, [r7, #4]
,
movwr3, #21622,
movtr3, #4146,
strr3, [r2, #12]
,
ldrr2, [r7, #4]
,
movwr3, #57840,
movtr3, #50130,
strr3, [r2, #16]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #20]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #24]
,
addsr7, #12
,
movsp, r7
,
ldr.wr7, [sp], #4
,
bxlr
,
push{r7, lr}
,
subsp, #16
,
addr7, sp, #0
,
strr0, [r7, #12]
,
strr1, [r7, #8]
,
strr2, [r7, #4]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #20]
,
cmpr2, r3
,
bcs.n580 <sha_update+0x28>
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #24]
,
addsr2, r3, #1
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #20]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #24]
,
ldrr3, [r7, #4]
,
lsrsr3, r3, #29
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
b.n5ca <sha_update+0x72>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr2, #64,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #12]
,
bl0 <sha_transform>
,
ldrr3, [r7, #8]
,
addsr3, #64,
strr3, [r7, #8]
,
ldrr3, [r7, #4]
,
subsr3, #64,
strr3, [r7, #4]
,
ldrr3, [r7, #4]
,
cmpr3, #63,
bgt.n59e <sha_update+0x46>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
ldrr2, [r7, #4]
,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
addsr7, #16
,
movsp, r7
,
pop{r7, pc}
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #20]
,
strr3, [r7, #12]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #24]
,
strr3, [r7, #16]
,
ldrr3, [r7, #12]
,
lsrsr3, r3, #3
,
and.wr3, r3, #63,
strr3, [r7, #20]
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr1, r3, #1
,
strr1, [r7, #20]
,
addr3, r2
,
movsr2, #128,
strbr2, [r3, #0]
,
ldrr3, [r7, #20]
,
cmpr3, #56,
ble.n656 <sha_final+0x70>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #64,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr2, #56,
movsr1, #0
,
movr0, r3
,
bl0 <memset>
,
b.n66e <sha_final+0x88>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #56,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr3, [r7, #4]
,
ldrr2, [r7, #16]
,
strr2, [r3, #84],
ldrr3, [r7, #4]
,
ldrr2, [r7, #12]
,
strr2, [r3, #88],
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
push{r4, r7, lr}
,
sub.wsp, sp, #8192,
subsp, #20
,
addr7, sp, #0
,
add.wr3, r7, #16
,
subsr3, #12
,
strr0, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #16
,
strr1, [r3, #0]
,
ldrr4, [pc, #152],
addr4, pc
,
ldrr3, [pc, #152],
ldrr3, [r4, r3]
,
ldrr3, [r3, #0]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
strr3, [r2, #0]
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl4fc <sha_init>
,
b.n6ea <sha_stream+0x56>
,
add.wr2, r7, #16
,
subsr2, #8
,
add.wr1, r7, #16
,
subsr1, #4
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr2, [r2, #0]
,
ldrr0, [r3, #0]
,
bl558 <sha_update>
,
add.wr3, r7, #16
,
subsr3, #16
,
add.wr0, r7, #16
,
subsr0, #4
,
ldrr3, [r3, #0]
,
mov.wr2, #8192,
movsr1, #1
,
bl0 <fread>
,
movr2, r0
,
add.wr3, r7, #16
,
subsr3, #8
,
strr2, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #8
,
ldrr3, [r3, #0]
,
cmpr3, #0
,
bgt.n6d0 <sha_stream+0x3c>
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl5e6 <sha_final>
,
ldrr3, [pc, #36],
ldrr3, [r4, r3]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
ldrr2, [r2, #0]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n73e <sha_stream+0xaa>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #8192,
addsr7, #20
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000094
,
.word0x00000000
,
push{r4, r7, lr}
,
subsp, #20
,
addr7, sp, #8
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr1, [r3, #0]
,
ldrr3, [r7, #4]
,
ldrr0, [r3, #4]
,
ldrr3, [r7, #4]
,
ldrr4, [r3, #8]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #12]
,
ldrr2, [r7, #4]
,
ldrr2, [r2, #16]
,
strr2, [sp, #4]
,
strr3, [sp, #0]
,
movr3, r4
,
movr2, r0
,
ldrr0, [pc, #12],
addr0, pc
,
bl0 <printf>
,
addsr7, #12
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x0000000a
,
push{r4, r7, lr}
,
subsp, #364,
addr7, sp, #0
,
addsr3, r7, #4
,
strr0, [r3, #0]
,
ldr.wr2, [pc, #1112],
addr2, pc
,
ldr.wr3, [pc, #1108],
ldrr3, [r2, r3]
,
ldrr3, [r3, #0]
,
str.wr3, [r7, #356],
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n54 <sha_transform+0x54>
,
addsr3, r7, #4
,
ldrr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
addsr3, #6
,
lslsr3, r3, #2
,
addr3, r1
,
ldrr0, [r3, #4]
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #15
,
ble.n26 <sha_transform+0x26>
,
add.wr3, r7, #8
,
movsr1, #16
,
strr1, [r3, #0]
,
b.nd2 <sha_transform+0xd2>
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
subsr1, r3, #3
,
add.wr3, r7, #36,
ldr.wr1, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #8
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #14
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #16
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eor.wr0, r1, r3
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n68 <sha_transform+0x68>
,
add.wr3, r7, #12
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #4]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #8]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #12]
,
strr1, [r3, #0]
,
add.wr3, r7, #28
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #16]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n1c4 <sha_transform+0x1c4>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
mvnsr4, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #31129,
movtr3, #23170,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #19
,
ble.n122 <sha_transform+0x122>
,
add.wr3, r7, #8
,
movsr1, #20
,
strr1, [r3, #0]
,
b.n270 <sha_transform+0x270>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #60321,
movtr3, #28377,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #39,
ble.n1d8 <sha_transform+0x1d8>
,
add.wr3, r7, #8
,
movsr1, #40,
strr1, [r3, #0]
,
b.n32c <sha_transform+0x32c>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #20
,
add.wr3, r7, #24
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
orrsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr4, r7, #20
,
add.wr3, r7, #24
,
ldrr4, [r4, #0]
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #48348,
movtr3, #36635,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #59,
ble.n284 <sha_transform+0x284>
,
add.wr3, r7, #8
,
movsr1, #60,
strr1, [r3, #0]
,
b.n3d8 <sha_transform+0x3d8>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #49622,
movtr3, #51810,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n340 <sha_transform+0x340>
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #0]
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #0]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #4]
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #4]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #8]
,
add.wr3, r7, #20
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #8]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #12]
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #12]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #16]
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #16]
,
ldrr3, [pc, #28],
ldrr3, [r2, r3]
,
ldr.wr2, [r7, #356],
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n45a <sha_transform+0x45a>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #364,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000452
,
.word0x00000000
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
strr1, [r7, #0]
,
ldrr3, [pc, #124],
addr3, pc
,
ldrr2, [pc, #124],
ldrr2, [r3, r2]
,
ldrr2, [r2, #0]
,
strr2, [r7, #20]
,
ldrr2, [r7, #0]
,
lsrsr2, r2, #2
,
strr2, [r7, #0]
,
ldrr2, [r7, #4]
,
strr2, [r7, #12]
,
movsr2, #0
,
strr2, [r7, #8]
,
b.n4d4 <byte_reverse+0x68>
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #0]
,
strbr2, [r7, #16]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #1]
,
strbr2, [r7, #17]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #2]
,
strbr2, [r7, #18]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #3]
,
strbr2, [r7, #19]
,
ldrbr1, [r7, #19]
,
ldrr2, [r7, #12]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #1
,
ldrbr1, [r7, #18]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #2
,
ldrbr1, [r7, #17]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #3
,
ldrbr1, [r7, #16]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #4
,
strr2, [r7, #12]
,
ldrr2, [r7, #8]
,
addsr2, #1
,
strr2, [r7, #8]
,
ldrr1, [r7, #8]
,
ldrr2, [r7, #0]
,
cmpr1, r2
,
blt.n492 <byte_reverse+0x26>
,
ldrr2, [pc, #24],
ldrr3, [r3, r2]
,
ldrr2, [r7, #20]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n4ee <byte_reverse+0x82>
,
bl0 <__stack_chk_fail>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
.word0x00000078
,
.word0x00000000
,
push{r7}
,
subsp, #12
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr2, [r7, #4]
,
movwr3, #8961,
movtr3, #26437,
strr3, [r2, #0]
,
ldrr2, [r7, #4]
,
movwr3, #43913,
movtr3, #61389,
strr3, [r2, #4]
,
ldrr2, [r7, #4]
,
movwr3, #56574,
movtr3, #39098,
strr3, [r2, #8]
,
ldrr2, [r7, #4]
,
movwr3, #21622,
movtr3, #4146,
strr3, [r2, #12]
,
ldrr2, [r7, #4]
,
movwr3, #57840,
movtr3, #50130,
strr3, [r2, #16]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #20]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #24]
,
addsr7, #12
,
movsp, r7
,
ldr.wr7, [sp], #4
,
bxlr
,
push{r7, lr}
,
subsp, #16
,
addr7, sp, #0
,
strr0, [r7, #12]
,
strr1, [r7, #8]
,
strr2, [r7, #4]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #20]
,
cmpr2, r3
,
bcs.n580 <sha_update+0x28>
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #24]
,
addsr2, r3, #1
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #20]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #24]
,
ldrr3, [r7, #4]
,
lsrsr3, r3, #29
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
b.n5ca <sha_update+0x72>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr2, #64,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #12]
,
bl0 <sha_transform>
,
ldrr3, [r7, #8]
,
addsr3, #64,
strr3, [r7, #8]
,
ldrr3, [r7, #4]
,
subsr3, #64,
strr3, [r7, #4]
,
ldrr3, [r7, #4]
,
cmpr3, #63,
bgt.n59e <sha_update+0x46>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
ldrr2, [r7, #4]
,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
addsr7, #16
,
movsp, r7
,
pop{r7, pc}
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #20]
,
strr3, [r7, #12]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #24]
,
strr3, [r7, #16]
,
ldrr3, [r7, #12]
,
lsrsr3, r3, #3
,
and.wr3, r3, #63,
strr3, [r7, #20]
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr1, r3, #1
,
strr1, [r7, #20]
,
addr3, r2
,
movsr2, #128,
strbr2, [r3, #0]
,
ldrr3, [r7, #20]
,
cmpr3, #56,
ble.n656 <sha_final+0x70>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #64,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr2, #56,
movsr1, #0
,
movr0, r3
,
bl0 <memset>
,
b.n66e <sha_final+0x88>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #56,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr3, [r7, #4]
,
ldrr2, [r7, #16]
,
strr2, [r3, #84],
ldrr3, [r7, #4]
,
ldrr2, [r7, #12]
,
strr2, [r3, #88],
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
push{r4, r7, lr}
,
sub.wsp, sp, #8192,
subsp, #20
,
addr7, sp, #0
,
add.wr3, r7, #16
,
subsr3, #12
,
strr0, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #16
,
strr1, [r3, #0]
,
ldrr4, [pc, #152],
addr4, pc
,
ldrr3, [pc, #152],
ldrr3, [r4, r3]
,
ldrr3, [r3, #0]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
strr3, [r2, #0]
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl4fc <sha_init>
,
b.n6ea <sha_stream+0x56>
,
add.wr2, r7, #16
,
subsr2, #8
,
add.wr1, r7, #16
,
subsr1, #4
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr2, [r2, #0]
,
ldrr0, [r3, #0]
,
bl558 <sha_update>
,
add.wr3, r7, #16
,
subsr3, #16
,
add.wr0, r7, #16
,
subsr0, #4
,
ldrr3, [r3, #0]
,
mov.wr2, #8192,
movsr1, #1
,
bl0 <fread>
,
movr2, r0
,
add.wr3, r7, #16
,
subsr3, #8
,
strr2, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #8
,
ldrr3, [r3, #0]
,
cmpr3, #0
,
bgt.n6d0 <sha_stream+0x3c>
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl5e6 <sha_final>
,
ldrr3, [pc, #36],
ldrr3, [r4, r3]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
ldrr2, [r2, #0]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n73e <sha_stream+0xaa>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #8192,
addsr7, #20
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000094
,
.word0x00000000
,
push{r4, r7, lr}
,
subsp, #20
,
addr7, sp, #8
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr1, [r3, #0]
,
ldrr3, [r7, #4]
,
ldrr0, [r3, #4]
,
ldrr3, [r7, #4]
,
ldrr4, [r3, #8]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #12]
,
ldrr2, [r7, #4]
,
ldrr2, [r2, #16]
,
strr2, [sp, #4]
,
strr3, [sp, #0]
,
movr3, r4
,
movr2, r0
,
ldrr0, [pc, #12],
addr0, pc
,
bl0 <printf>
,
addsr7, #12
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x0000000a
,
push{r4, r7, lr}
,
subsp, #364,
addr7, sp, #0
,
addsr3, r7, #4
,
strr0, [r3, #0]
,
ldr.wr2, [pc, #1112],
addr2, pc
,
ldr.wr3, [pc, #1108],
ldrr3, [r2, r3]
,
ldrr3, [r3, #0]
,
str.wr3, [r7, #356],
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n54 <sha_transform+0x54>
,
addsr3, r7, #4
,
ldrr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
addsr3, #6
,
lslsr3, r3, #2
,
addr3, r1
,
ldrr0, [r3, #4]
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #15
,
ble.n26 <sha_transform+0x26>
,
add.wr3, r7, #8
,
movsr1, #16
,
strr1, [r3, #0]
,
b.nd2 <sha_transform+0xd2>
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
subsr1, r3, #3
,
add.wr3, r7, #36,
ldr.wr1, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #8
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #14
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #16
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eor.wr0, r1, r3
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n68 <sha_transform+0x68>
,
add.wr3, r7, #12
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #4]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #8]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #12]
,
strr1, [r3, #0]
,
add.wr3, r7, #28
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #16]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n1c4 <sha_transform+0x1c4>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
mvnsr4, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #31129,
movtr3, #23170,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #19
,
ble.n122 <sha_transform+0x122>
,
add.wr3, r7, #8
,
movsr1, #20
,
strr1, [r3, #0]
,
b.n270 <sha_transform+0x270>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #60321,
movtr3, #28377,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #39,
ble.n1d8 <sha_transform+0x1d8>
,
add.wr3, r7, #8
,
movsr1, #40,
strr1, [r3, #0]
,
b.n32c <sha_transform+0x32c>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #20
,
add.wr3, r7, #24
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
orrsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr4, r7, #20
,
add.wr3, r7, #24
,
ldrr4, [r4, #0]
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #48348,
movtr3, #36635,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #59,
ble.n284 <sha_transform+0x284>
,
add.wr3, r7, #8
,
movsr1, #60,
strr1, [r3, #0]
,
b.n3d8 <sha_transform+0x3d8>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #49622,
movtr3, #51810,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n340 <sha_transform+0x340>
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #0]
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #0]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #4]
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #4]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #8]
,
add.wr3, r7, #20
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #8]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #12]
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #12]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #16]
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #16]
,
ldrr3, [pc, #28],
ldrr3, [r2, r3]
,
ldr.wr2, [r7, #356],
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n45a <sha_transform+0x45a>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #364,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000452
,
.word0x00000000
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
strr1, [r7, #0]
,
ldrr3, [pc, #124],
addr3, pc
,
ldrr2, [pc, #124],
ldrr2, [r3, r2]
,
ldrr2, [r2, #0]
,
strr2, [r7, #20]
,
ldrr2, [r7, #0]
,
lsrsr2, r2, #2
,
strr2, [r7, #0]
,
ldrr2, [r7, #4]
,
strr2, [r7, #12]
,
movsr2, #0
,
strr2, [r7, #8]
,
b.n4d4 <byte_reverse+0x68>
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #0]
,
strbr2, [r7, #16]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #1]
,
strbr2, [r7, #17]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #2]
,
strbr2, [r7, #18]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #3]
,
strbr2, [r7, #19]
,
ldrbr1, [r7, #19]
,
ldrr2, [r7, #12]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #1
,
ldrbr1, [r7, #18]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #2
,
ldrbr1, [r7, #17]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #3
,
ldrbr1, [r7, #16]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #4
,
strr2, [r7, #12]
,
ldrr2, [r7, #8]
,
addsr2, #1
,
strr2, [r7, #8]
,
ldrr1, [r7, #8]
,
ldrr2, [r7, #0]
,
cmpr1, r2
,
blt.n492 <byte_reverse+0x26>
,
ldrr2, [pc, #24],
ldrr3, [r3, r2]
,
ldrr2, [r7, #20]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n4ee <byte_reverse+0x82>
,
bl0 <__stack_chk_fail>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
.word0x00000078
,
.word0x00000000
,
push{r7}
,
subsp, #12
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr2, [r7, #4]
,
movwr3, #8961,
movtr3, #26437,
strr3, [r2, #0]
,
ldrr2, [r7, #4]
,
movwr3, #43913,
movtr3, #61389,
strr3, [r2, #4]
,
ldrr2, [r7, #4]
,
movwr3, #56574,
movtr3, #39098,
strr3, [r2, #8]
,
ldrr2, [r7, #4]
,
movwr3, #21622,
movtr3, #4146,
strr3, [r2, #12]
,
ldrr2, [r7, #4]
,
movwr3, #57840,
movtr3, #50130,
strr3, [r2, #16]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #20]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #24]
,
addsr7, #12
,
movsp, r7
,
ldr.wr7, [sp], #4
,
bxlr
,
push{r7, lr}
,
subsp, #16
,
addr7, sp, #0
,
strr0, [r7, #12]
,
strr1, [r7, #8]
,
strr2, [r7, #4]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #20]
,
cmpr2, r3
,
bcs.n580 <sha_update+0x28>
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #24]
,
addsr2, r3, #1
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #20]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #24]
,
ldrr3, [r7, #4]
,
lsrsr3, r3, #29
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
b.n5ca <sha_update+0x72>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr2, #64,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #12]
,
bl0 <sha_transform>
,
ldrr3, [r7, #8]
,
addsr3, #64,
strr3, [r7, #8]
,
ldrr3, [r7, #4]
,
subsr3, #64,
strr3, [r7, #4]
,
ldrr3, [r7, #4]
,
cmpr3, #63,
bgt.n59e <sha_update+0x46>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
ldrr2, [r7, #4]
,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
addsr7, #16
,
movsp, r7
,
pop{r7, pc}
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #20]
,
strr3, [r7, #12]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #24]
,
strr3, [r7, #16]
,
ldrr3, [r7, #12]
,
lsrsr3, r3, #3
,
and.wr3, r3, #63,
strr3, [r7, #20]
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr1, r3, #1
,
strr1, [r7, #20]
,
addr3, r2
,
movsr2, #128,
strbr2, [r3, #0]
,
ldrr3, [r7, #20]
,
cmpr3, #56,
ble.n656 <sha_final+0x70>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #64,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr2, #56,
movsr1, #0
,
movr0, r3
,
bl0 <memset>
,
b.n66e <sha_final+0x88>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #56,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr3, [r7, #4]
,
ldrr2, [r7, #16]
,
strr2, [r3, #84],
ldrr3, [r7, #4]
,
ldrr2, [r7, #12]
,
strr2, [r3, #88],
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
push{r4, r7, lr}
,
sub.wsp, sp, #8192,
subsp, #20
,
addr7, sp, #0
,
add.wr3, r7, #16
,
subsr3, #12
,
strr0, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #16
,
strr1, [r3, #0]
,
ldrr4, [pc, #152],
addr4, pc
,
ldrr3, [pc, #152],
ldrr3, [r4, r3]
,
ldrr3, [r3, #0]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
strr3, [r2, #0]
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl4fc <sha_init>
,
b.n6ea <sha_stream+0x56>
,
add.wr2, r7, #16
,
subsr2, #8
,
add.wr1, r7, #16
,
subsr1, #4
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr2, [r2, #0]
,
ldrr0, [r3, #0]
,
bl558 <sha_update>
,
add.wr3, r7, #16
,
subsr3, #16
,
add.wr0, r7, #16
,
subsr0, #4
,
ldrr3, [r3, #0]
,
mov.wr2, #8192,
movsr1, #1
,
bl0 <fread>
,
movr2, r0
,
add.wr3, r7, #16
,
subsr3, #8
,
strr2, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #8
,
ldrr3, [r3, #0]
,
cmpr3, #0
,
bgt.n6d0 <sha_stream+0x3c>
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl5e6 <sha_final>
,
ldrr3, [pc, #36],
ldrr3, [r4, r3]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
ldrr2, [r2, #0]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n73e <sha_stream+0xaa>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #8192,
addsr7, #20
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000094
,
.word0x00000000
,
push{r4, r7, lr}
,
subsp, #20
,
addr7, sp, #8
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr1, [r3, #0]
,
ldrr3, [r7, #4]
,
ldrr0, [r3, #4]
,
ldrr3, [r7, #4]
,
ldrr4, [r3, #8]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #12]
,
ldrr2, [r7, #4]
,
ldrr2, [r2, #16]
,
strr2, [sp, #4]
,
strr3, [sp, #0]
,
movr3, r4
,
movr2, r0
,
ldrr0, [pc, #12],
addr0, pc
,
bl0 <printf>
,
addsr7, #12
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x0000000a
,
push{r4, r7, lr}
,
subsp, #364,
addr7, sp, #0
,
addsr3, r7, #4
,
strr0, [r3, #0]
,
ldr.wr2, [pc, #1112],
addr2, pc
,
ldr.wr3, [pc, #1108],
ldrr3, [r2, r3]
,
ldrr3, [r3, #0]
,
str.wr3, [r7, #356],
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n54 <sha_transform+0x54>
,
addsr3, r7, #4
,
ldrr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
addsr3, #6
,
lslsr3, r3, #2
,
addr3, r1
,
ldrr0, [r3, #4]
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #15
,
ble.n26 <sha_transform+0x26>
,
add.wr3, r7, #8
,
movsr1, #16
,
strr1, [r3, #0]
,
b.nd2 <sha_transform+0xd2>
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
subsr1, r3, #3
,
add.wr3, r7, #36,
ldr.wr1, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #8
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #14
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eorsr1, r3
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
sub.wr0, r3, #16
,
add.wr3, r7, #36,
ldr.wr3, [r3, r0, lsl #2]
,
eor.wr0, r1, r3
,
add.wr3, r7, #36,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
str.wr0, [r3, r1, lsl #2]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n68 <sha_transform+0x68>
,
add.wr3, r7, #12
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #4]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #8]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #12]
,
strr1, [r3, #0]
,
add.wr3, r7, #28
,
addsr1, r7, #4
,
ldrr1, [r1, #0]
,
ldrr1, [r1, #16]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
movsr1, #0
,
strr1, [r3, #0]
,
b.n1c4 <sha_transform+0x1c4>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
mvnsr4, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #31129,
movtr3, #23170,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #19
,
ble.n122 <sha_transform+0x122>
,
add.wr3, r7, #8
,
movsr1, #20
,
strr1, [r3, #0]
,
b.n270 <sha_transform+0x270>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #60321,
movtr3, #28377,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #39,
ble.n1d8 <sha_transform+0x1d8>
,
add.wr3, r7, #8
,
movsr1, #40,
strr1, [r3, #0]
,
b.n32c <sha_transform+0x32c>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #20
,
add.wr3, r7, #24
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
orrsr0, r3
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
andsr0, r3
,
add.wr4, r7, #20
,
add.wr3, r7, #24
,
ldrr4, [r4, #0]
,
ldrr3, [r3, #0]
,
andsr3, r4
,
orrsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #48348,
movtr3, #36635,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #59,
ble.n284 <sha_transform+0x284>
,
add.wr3, r7, #8
,
movsr1, #60,
strr1, [r3, #0]
,
b.n3d8 <sha_transform+0x3d8>
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
mov.wr1, r3, ror #27
,
add.wr0, r7, #16
,
add.wr3, r7, #20
,
ldrr0, [r0, #0]
,
ldrr3, [r3, #0]
,
eorsr0, r3
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
eorsr3, r0
,
addr1, r3
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
add.wr3, r7, #36,
add.wr0, r7, #8
,
ldrr0, [r0, #0]
,
ldr.wr3, [r3, r0, lsl #2]
,
addsr0, r1, r3
,
add.wr1, r7, #32
,
movwr3, #49622,
movtr3, #51810,
addr3, r0
,
strr3, [r1, #0]
,
add.wr3, r7, #28
,
add.wr1, r7, #24
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #24
,
add.wr1, r7, #20
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #20
,
add.wr1, r7, #16
,
ldrr1, [r1, #0]
,
mov.wr1, r1, ror #2
,
strr1, [r3, #0]
,
add.wr3, r7, #16
,
add.wr1, r7, #12
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #12
,
add.wr1, r7, #32
,
ldrr1, [r1, #0]
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
add.wr1, r7, #8
,
ldrr1, [r1, #0]
,
addsr1, #1
,
strr1, [r3, #0]
,
add.wr3, r7, #8
,
ldrr3, [r3, #0]
,
cmpr3, #79,
ble.n340 <sha_transform+0x340>
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #0]
,
add.wr3, r7, #12
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #0]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #4]
,
add.wr3, r7, #16
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #4]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #8]
,
add.wr3, r7, #20
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #8]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #12]
,
add.wr3, r7, #24
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #12]
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
ldrr1, [r3, #16]
,
add.wr3, r7, #28
,
ldrr3, [r3, #0]
,
addr1, r3
,
addsr3, r7, #4
,
ldrr3, [r3, #0]
,
strr1, [r3, #16]
,
ldrr3, [pc, #28],
ldrr3, [r2, r3]
,
ldr.wr2, [r7, #356],
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n45a <sha_transform+0x45a>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #364,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000452
,
.word0x00000000
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
strr1, [r7, #0]
,
ldrr3, [pc, #124],
addr3, pc
,
ldrr2, [pc, #124],
ldrr2, [r3, r2]
,
ldrr2, [r2, #0]
,
strr2, [r7, #20]
,
ldrr2, [r7, #0]
,
lsrsr2, r2, #2
,
strr2, [r7, #0]
,
ldrr2, [r7, #4]
,
strr2, [r7, #12]
,
movsr2, #0
,
strr2, [r7, #8]
,
b.n4d4 <byte_reverse+0x68>
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #0]
,
strbr2, [r7, #16]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #1]
,
strbr2, [r7, #17]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #2]
,
strbr2, [r7, #18]
,
ldrr2, [r7, #12]
,
ldrbr2, [r2, #3]
,
strbr2, [r7, #19]
,
ldrbr1, [r7, #19]
,
ldrr2, [r7, #12]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #1
,
ldrbr1, [r7, #18]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #2
,
ldrbr1, [r7, #17]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #3
,
ldrbr1, [r7, #16]
,
strbr1, [r2, #0]
,
ldrr2, [r7, #12]
,
addsr2, #4
,
strr2, [r7, #12]
,
ldrr2, [r7, #8]
,
addsr2, #1
,
strr2, [r7, #8]
,
ldrr1, [r7, #8]
,
ldrr2, [r7, #0]
,
cmpr1, r2
,
blt.n492 <byte_reverse+0x26>
,
ldrr2, [pc, #24],
ldrr3, [r3, r2]
,
ldrr2, [r7, #20]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n4ee <byte_reverse+0x82>
,
bl0 <__stack_chk_fail>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
.word0x00000078
,
.word0x00000000
,
push{r7}
,
subsp, #12
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr2, [r7, #4]
,
movwr3, #8961,
movtr3, #26437,
strr3, [r2, #0]
,
ldrr2, [r7, #4]
,
movwr3, #43913,
movtr3, #61389,
strr3, [r2, #4]
,
ldrr2, [r7, #4]
,
movwr3, #56574,
movtr3, #39098,
strr3, [r2, #8]
,
ldrr2, [r7, #4]
,
movwr3, #21622,
movtr3, #4146,
strr3, [r2, #12]
,
ldrr2, [r7, #4]
,
movwr3, #57840,
movtr3, #50130,
strr3, [r2, #16]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #20]
,
ldrr3, [r7, #4]
,
movsr2, #0
,
strr2, [r3, #24]
,
addsr7, #12
,
movsp, r7
,
ldr.wr7, [sp], #4
,
bxlr
,
push{r7, lr}
,
subsp, #16
,
addr7, sp, #0
,
strr0, [r7, #12]
,
strr1, [r7, #8]
,
strr2, [r7, #4]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #20]
,
cmpr2, r3
,
bcs.n580 <sha_update+0x28>
,
ldrr3, [r7, #12]
,
ldrr3, [r3, #24]
,
addsr2, r3, #1
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #20]
,
ldrr3, [r7, #4]
,
lslsr3, r3, #3
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #20]
,
ldrr3, [r7, #12]
,
ldrr2, [r3, #24]
,
ldrr3, [r7, #4]
,
lsrsr3, r3, #29
,
addr2, r3
,
ldrr3, [r7, #12]
,
strr2, [r3, #24]
,
b.n5ca <sha_update+0x72>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr2, #64,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #12]
,
bl0 <sha_transform>
,
ldrr3, [r7, #8]
,
addsr3, #64,
strr3, [r7, #8]
,
ldrr3, [r7, #4]
,
subsr3, #64,
strr3, [r7, #4]
,
ldrr3, [r7, #4]
,
cmpr3, #63,
bgt.n59e <sha_update+0x46>
,
ldrr3, [r7, #12]
,
addsr3, #28
,
ldrr2, [r7, #4]
,
ldrr1, [r7, #8]
,
movr0, r3
,
bl0 <memcpy>
,
addsr7, #16
,
movsp, r7
,
pop{r7, pc}
,
push{r7, lr}
,
subsp, #24
,
addr7, sp, #0
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #20]
,
strr3, [r7, #12]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #24]
,
strr3, [r7, #16]
,
ldrr3, [r7, #12]
,
lsrsr3, r3, #3
,
and.wr3, r3, #63,
strr3, [r7, #20]
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr1, r3, #1
,
strr1, [r7, #20]
,
addr3, r2
,
movsr2, #128,
strbr2, [r3, #0]
,
ldrr3, [r7, #20]
,
cmpr3, #56,
ble.n656 <sha_final+0x70>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #64,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr2, #56,
movsr1, #0
,
movr0, r3
,
bl0 <memset>
,
b.n66e <sha_final+0x88>
,
ldrr3, [r7, #4]
,
add.wr2, r3, #28
,
ldrr3, [r7, #20]
,
addsr0, r2, r3
,
ldrr3, [r7, #20]
,
rsbr3, r3, #56,
movr2, r3
,
movsr1, #0
,
bl0 <memset>
,
ldrr3, [r7, #4]
,
addsr3, #28
,
movsr1, #64,
movr0, r3
,
bl46c <byte_reverse>
,
ldrr3, [r7, #4]
,
ldrr2, [r7, #16]
,
strr2, [r3, #84],
ldrr3, [r7, #4]
,
ldrr2, [r7, #12]
,
strr2, [r3, #88],
ldrr0, [r7, #4]
,
bl0 <sha_transform>
,
addsr7, #24
,
movsp, r7
,
pop{r7, pc}
,
push{r4, r7, lr}
,
sub.wsp, sp, #8192,
subsp, #20
,
addr7, sp, #0
,
add.wr3, r7, #16
,
subsr3, #12
,
strr0, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #16
,
strr1, [r3, #0]
,
ldrr4, [pc, #152],
addr4, pc
,
ldrr3, [pc, #152],
ldrr3, [r4, r3]
,
ldrr3, [r3, #0]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
strr3, [r2, #0]
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl4fc <sha_init>
,
b.n6ea <sha_stream+0x56>
,
add.wr2, r7, #16
,
subsr2, #8
,
add.wr1, r7, #16
,
subsr1, #4
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr2, [r2, #0]
,
ldrr0, [r3, #0]
,
bl558 <sha_update>
,
add.wr3, r7, #16
,
subsr3, #16
,
add.wr0, r7, #16
,
subsr0, #4
,
ldrr3, [r3, #0]
,
mov.wr2, #8192,
movsr1, #1
,
bl0 <fread>
,
movr2, r0
,
add.wr3, r7, #16
,
subsr3, #8
,
strr2, [r3, #0]
,
add.wr3, r7, #16
,
subsr3, #8
,
ldrr3, [r3, #0]
,
cmpr3, #0
,
bgt.n6d0 <sha_stream+0x3c>
,
add.wr3, r7, #16
,
subsr3, #12
,
ldrr0, [r3, #0]
,
bl5e6 <sha_final>
,
ldrr3, [pc, #36],
ldrr3, [r4, r3]
,
add.wr2, r7, #8192,
add.wr2, r2, #12
,
ldrr2, [r2, #0]
,
ldrr3, [r3, #0]
,
cmpr2, r3
,
beq.n73e <sha_stream+0xaa>
,
bl0 <__stack_chk_fail>
,
add.wr7, r7, #8192,
addsr7, #20
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x00000094
,
.word0x00000000
,
push{r4, r7, lr}
,
subsp, #20
,
addr7, sp, #8
,
strr0, [r7, #4]
,
ldrr3, [r7, #4]
,
ldrr1, [r3, #0]
,
ldrr3, [r7, #4]
,
ldrr0, [r3, #4]
,
ldrr3, [r7, #4]
,
ldrr4, [r3, #8]
,
ldrr3, [r7, #4]
,
ldrr3, [r3, #12]
,
ldrr2, [r7, #4]
,
ldrr2, [r2, #16]
,
strr2, [sp, #4]
,
strr3, [sp, #0]
,
movr3, r4
,
movr2, r0
,
ldrr0, [pc, #12],
addr0, pc
,
bl0 <printf>
,
addsr7, #12
,
movsp, r7
,
pop{r4, r7, pc}
,
.word0x0000000a
,
